.\" Manpage for version.
.\" Contact kp@bit-101.com to correct errors or typos.
.TH version 1 "25 Sep 2020" "1.3.0" "version man page"
.SH NAME
version \- displays the versions of programs you have installed
.SH SYNOPSIS
version [program]
.SH DESCRIPTION
version knows the flags to use to find the versions of many common programs. Rather than typing `java -version` or `python -V` or `go version`, you can now type `version java`, `version python` or `version go`.
.SH OPTIONS
.PP
.nf
version -h \- display help
version -l \- display a list of known programs and their version flags.
version -c \- display count of known programs.
version -v \- display version of version
.RE
.SH EXAMPLES
.PP
.nf
version java
version python
version go
.RE
.SH EXTENDING
.PP
It's easy to add new programs to version. Open the version shell script in an editor. You will see a long list of lines that begin with 'tools_'. To add a program called 'foo', which has a version flag of '-v', add:
.PP
.nf
tools_foo=-v
.RE
.SH CONTRIBUTING
If you add any useful tools to the list, you can contribute them back to the source by making a pull request at https://github.com/bit101/version
.SH BUGS
No known bugs, per se. But some tools may function differently on different environments. For example, to get the version of sed on Linux (GNU sed), you can type 'sed --version'. But the version of sed that comes with Macos has no version flag at all. There may be other cases like this.
.SH AUTHOR
Keith Peters (kp@bit-101.com)
